// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "message.proto" (package "msg", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { MessageService } from "./message";
import type { CreateMessageResponse } from "./message";
import type { CreateMessageRequest } from "./message";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetMessageResponse } from "./message";
import type { GetMessageRequest } from "./message";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service msg.MessageService
 */
export interface IMessageServiceClient {
    /**
     * @generated from protobuf rpc: GetMessage(msg.GetMessageRequest) returns (msg.GetMessageResponse);
     */
    getMessage(input: GetMessageRequest, options?: RpcOptions): UnaryCall<GetMessageRequest, GetMessageResponse>;
    /**
     * @generated from protobuf rpc: CreateMessage(msg.CreateMessageRequest) returns (msg.CreateMessageResponse);
     */
    createMessage(input: CreateMessageRequest, options?: RpcOptions): UnaryCall<CreateMessageRequest, CreateMessageResponse>;
}
/**
 * @generated from protobuf service msg.MessageService
 */
export class MessageServiceClient implements IMessageServiceClient, ServiceInfo {
    typeName = MessageService.typeName;
    methods = MessageService.methods;
    options = MessageService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetMessage(msg.GetMessageRequest) returns (msg.GetMessageResponse);
     */
    getMessage(input: GetMessageRequest, options?: RpcOptions): UnaryCall<GetMessageRequest, GetMessageResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetMessageRequest, GetMessageResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateMessage(msg.CreateMessageRequest) returns (msg.CreateMessageResponse);
     */
    createMessage(input: CreateMessageRequest, options?: RpcOptions): UnaryCall<CreateMessageRequest, CreateMessageResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateMessageRequest, CreateMessageResponse>("unary", this._transport, method, opt, input);
    }
}
