// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "reaction.proto" (package "reaction", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { ReactionService } from "./reaction";
import type { CreateReactionResponse } from "./reaction";
import type { CreateReactionRequest } from "./reaction";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetReactionResponse } from "./reaction";
import type { GetReactionRequest } from "./reaction";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service reaction.ReactionService
 */
export interface IReactionServiceClient {
    /**
     * @generated from protobuf rpc: GetReaction(reaction.GetReactionRequest) returns (reaction.GetReactionResponse);
     */
    getReaction(input: GetReactionRequest, options?: RpcOptions): UnaryCall<GetReactionRequest, GetReactionResponse>;
    /**
     * @generated from protobuf rpc: CreateReaction(reaction.CreateReactionRequest) returns (reaction.CreateReactionResponse);
     */
    createReaction(input: CreateReactionRequest, options?: RpcOptions): UnaryCall<CreateReactionRequest, CreateReactionResponse>;
}
/**
 * @generated from protobuf service reaction.ReactionService
 */
export class ReactionServiceClient implements IReactionServiceClient, ServiceInfo {
    typeName = ReactionService.typeName;
    methods = ReactionService.methods;
    options = ReactionService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetReaction(reaction.GetReactionRequest) returns (reaction.GetReactionResponse);
     */
    getReaction(input: GetReactionRequest, options?: RpcOptions): UnaryCall<GetReactionRequest, GetReactionResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetReactionRequest, GetReactionResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateReaction(reaction.CreateReactionRequest) returns (reaction.CreateReactionResponse);
     */
    createReaction(input: CreateReactionRequest, options?: RpcOptions): UnaryCall<CreateReactionRequest, CreateReactionResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateReactionRequest, CreateReactionResponse>("unary", this._transport, method, opt, input);
    }
}
