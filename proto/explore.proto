syntax = "proto3";

package explore;

import "world.proto";
import "message.proto";
import "reaction.proto";
import "speaker_phone.proto";

// 探索者; 探索中のユーザー
message Explorer {
    // UUID (ULIDかも) ユーザーIDとは別物
    string id = 1;
    // ユーザーID
    // ユーザーの情報はuser.protoに記述
    string user_id = 2;
    // そのユーザーの現在地 座標
    world.Coordinate position = 3;
}

// 探索者が一度に表示できる領域
message ExploreField {
    // 中心座標
    world.Coordinate position = 1;
    // 表示範囲
    world.Size size = 2;
}

message ExplorerUpdate {
    // 探索者がオンラインになった時
    message Arrive {
        // 探索者のID
        string id = 1;
        // 探索者の現在地
        world.Coordinate position = 2;
    }

    // 探索者が移動した時
    message Move {
        // 探索者のID
        string id = 1;
        // 探索者の現在地
        world.Coordinate position = 2;
    }

    // 探索者がオフラインになった時
    message Leave {
        // 探索者のID
        string id = 1;
    }

    oneof update {
        Arrive arrive = 1;
        Move move = 2;
        Leave leave = 3;
    }
}

// フィールド探索中のイベント
message ExploreFieldEvents {
    // 新しいメッセージのIDリスト
    // 直近に投稿されたメッセージ、以前に投稿されたがUserFieldに入ったメッセージを含む
    repeated string messages = 1;
    // 新しいスピーカーフォンのIDリスト
    // 直近に設置されたスピーカーフォン、以前に設置されたがUserFieldに入ったスピーカーフォンを含む
    repeated string speaker_phones = 2;
    // 新しいリアクションのIDリスト
    // 直近のリアクションのみを含む
    // 以前のリアクションは含まない; すぐに揮発して見えなくなるため
    repeated string reactions = 3;
    // 探索者の更新全般
    // 新しくオンラインになったユーザー、既にオンラインで移動したユーザー、オフラインになったユーザーを含む
    repeated ExplorerUpdate explorers_update = 4;
}

// メッセージの作成
message CreateMessageRequest {
    // メッセージの内容
    string content = 1;
    // メッセージの座標
    world.Coordinate position = 2;
}

message CreateMessageResponse {
    msg.Message message = 1;
}

// リアクションの作成
message CreateReactionRequest {
    // リアクションをするメッセージのID
    string message_id = 1;
    // リアクションの種類
    string kind = 2;
    // リアクションをする座標
    world.Coordinate position = 3;
}

message CreateReactionResponse {
    reaction.Reaction reaction = 1;
}

// スピーカーフォンの作成
message CreateSpeakerPhoneRequest {
    // traQチャンネルのパス
    string channel_path = 1;
    // スピーカーフォンの座標
    world.Coordinate position = 2;
}

message CreateSpeakerPhoneResponse {
    speaker_phone.SpeakerPhone speaker_phone = 1;
}

service ExploreService {
    // 探索ストリーム
    // ExploreField: 探索者が移動する度にクライアントから送信する
    // ExploreFieldEvents: 他の探索者の移動、メッセージの投稿等のイベントを受信する
    //     ExploreFieldの更新に伴って既存の探索者、既存のメッセージも受信する
    rpc Explore(stream ExploreField) returns (stream ExploreFieldEvents);

    // メッセージの作成
    rpc CreateMessage(CreateMessageRequest) returns (CreateMessageResponse);

    // リアクションの作成
    rpc CreateReaction(CreateReactionRequest) returns (CreateReactionResponse);

    // スピーカーフォンの作成
    rpc CreateSpeakerPhone(CreateSpeakerPhoneRequest) returns (CreateSpeakerPhoneResponse);

    // TODO: スピーカーフォンの編集、削除
}
